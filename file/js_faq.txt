-------------------------------------------------------------------------------
index
-------------------------------------------------------------------------------
1. 计算http请求时间
2. 字符串替换
3. 字符串查找并提取子串
4. css要设定文本字体
5. div居中margin的0去掉会好使
6. js 模仿jQuery用法的function $(id)
7. js的字符串数组拼接
8. js加载时执行：window.onload
9. js的控件隐藏显示
10. XMLHttpRequest状态码
11. 获取距离今天前后几天的时间


-------------------------------------------------------------------------------
content
-------------------------------------------------------------------------------
1.计算http请求时间
	//起始时间
	var start_date = new Date;
	var start_sec = start_date.getSeconds();
	var start_ms = start_date.getMilliseconds();
	
	//服务成功返回的时间
	{
		var end_date = new Date;
		var sec = end_date.getSeconds() - start_sec;
		var end_ms = end_date.getMilliseconds();
		var timecost = "";
		if(sec == 0) {
			timecost += (end_ms  - start_ms).toString();
		} else {
			timecost += (sec * 1000 + 1000 + end_ms - start_ms).toString();
		}
	}
	//timecost就是耗费的时间字符串，赋值给相应控件显示，单位ms

-------------------------------------------------------------------------------
2. 字符串替换
	var result = xhr.responseText
					.replace(/&/g, "&amp;")
					.replace(/\</g, "&lt;")
					.replace(/\>/g, "&gt;")
					.replace(/"/g, "&quot;")
					.replace(/ /g, "&nbsp")
					.replace(/\r\n/g, "<br>")
					.replace(/\n/g, "<br>")
					.replace(/\|/g, "<br>")

-------------------------------------------------------------------------------
3. 字符串查找并提取子串
	var idx = result.indexOf("sdkappid");
				if(idx > 0)
					$("rspbody").innerHTML = result.substring(idx);
				else
					$("rspbody").innerHTML = result;

-------------------------------------------------------------------------------
4. css要设定文本字体
	不同的系统，字体集合不同，导致默认的字体不一致。因此出现界面不兼容
	在css中指定字体，而不使用默认字体。

-------------------------------------------------------------------------------
5. div居中margin的0去掉会好使
	margin:0, auto; -> margin:auto; 

-------------------------------------------------------------------------------
6. js 模仿jQuery用法的function $(id)
	function $(id)
	{
		return document.getElementById(id);
	}

-------------------------------------------------------------------------------
7. js的字符串数组拼接
	var param = ["http://www.example.com", "file", "name=js"];
	var url = param.join("/");

-------------------------------------------------------------------------------
8. js加载时执行：window.onload
	window.onload = function() {
		//初始化
	}

-------------------------------------------------------------------------------
9. js的控件隐藏显示
	$("rsp-panel").style.visibility = "hidden"; //隐藏
	$("rsp-panel").style.visibility = "visible"; //显示

-------------------------------------------------------------------------------
10. XMLHttpRequest状态码
	0	UNSENT				代理被创建，但尚未调用 open() 方法。
	1	OPENED				open() 方法已经被调用。
	2	HEADERS_RECEIVED	send() 方法已经被调用，并且头部和状态已经可获得。
	3	LOADING				下载中； responseText 属性已经包含部分数据。
	4	DONE				请求操作已完成。

	UNSENT
		XMLHttpRequest 代理已被创建， 但尚未调用 open() 方法。
	OPENED
		open() 方法已经被触发。在这个状态中，可以通过  setRequestHeader() 
		方法来设置请求的头部， 可以调用 send() 方法来发起请求。
	HEADERS_RECEIVED
		send() 方法已经被调用，响应头也已经被接收。
	LOADING
		响应体部分正在被接收。如果 responseType 属性是“text”或空字符串， 
		responseText 将会在载入的过程中拥有部分响应数据。
	DONE
		请求操作已经完成。这意味着数据传输已经彻底完成或失败。

	参考：
		https://xhr.spec.whatwg.org/#states
		https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/readyState

-------------------------------------------------------------------------------
js 等价于c语言char数组方式
	var hash = new Uint8Array([0,0,0,0]);
	转化成整型，默认大端机器，高字节在高位
	var result = (hash[3] << 24 | hash[2] << 16 | hash[1] << 8 | hash[0]) >>> 0;

js 有符号转化为无符号
	unsigned = signed>>>0;

js 字符串的ascii码
	str.charCodeAt(i);
	取字符
	str.charAt(i)

php 类型转换直接使用C的强转风格
	时间戳函数time()

-------------------------------------------------------------------------------
11. 获取距离今天前后几天的时间:
		var begin_date;
        var start_time = $('#start-time').val();
        if(start_time == "") {
            var now = new Date();
            now.setDate(now.getDate()-1); //加上偏移天数

            begin_date = now.getFullYear();
            var month = now.getMonth() + 1;
            if (month < 10) {
                begin_date += '0';
            } 
            begin_date += month;

            if(now.getDate() < 10) {
                begin_date += '0';
            } 
            begin_date += now.getDate();
        } else {
            begin_date = start_time.replace(/-/g, '');
        }
    (1) input采用date类型，获取的时间格式xxxx-xx-xx，转换成20170726使用replace
    (2) 如果是自定义时间，转换成20170726的方式，不足两位需要自补0

-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
